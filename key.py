from typing import Any, Union, Optional, Dict

from pyglet.window.key import *
from pyglet.window.key import _0, _1, _2, _3, _4, _5, _6, _7, _8, _9
from pyglet.window.key import _key_names


KEY_NAMES = [
    'BACKSPACE',
    'TAB',
    'LINEFEED',
    'CLEAR',
    'ENTER',
    'RETURN',
    'PAUSE',
    'SCROLLLOCK',
    'SYSREQ',
    'ESCAPE',
    'HOME',
    'LEFT',
    'UP',
    'RIGHT',
    'DOWN',
    'PAGEUP',
    'PAGEDOWN',
    'END',
    'BEGIN',
    'DELETE',
    'SELECT',
    'PRINT',
    'EXECUTE',
    'INSERT',
    'UNDO',
    'REDO',
    'MENU',
    'FIND',
    'CANCEL',
    'HELP',
    'BREAK',
    'MODESWITCH',
    'SCRIPTSWITCH',
    'MOTION_UP',
    'MOTION_RIGHT',
    'MOTION_DOWN',
    'MOTION_LEFT',
    'MOTION_NEXT_WORD',
    'MOTION_PREVIOUS_WORD',
    'MOTION_BEGINNING_OF_LINE',
    'MOTION_END_OF_LINE',
    'MOTION_NEXT_PAGE',
    'MOTION_PREVIOUS_PAGE',
    'MOTION_BEGINNING_OF_FILE',
    'MOTION_END_OF_FILE',
    'MOTION_BACKSPACE',
    'MOTION_DELETE',
    'NUMLOCK',
    'NUM_SPACE',
    'NUM_TAB',
    'NUM_ENTER',
    'NUM_F1',
    'NUM_F2',
    'NUM_F3',
    'NUM_F4',
    'NUM_HOME',
    'NUM_LEFT',
    'NUM_UP',
    'NUM_RIGHT',
    'NUM_DOWN',
    'NUM_PRIOR',
    'NUM_PAGE_UP',
    'NUM_NEXT',
    'NUM_PAGE_DOWN',
    'NUM_END',
    'NUM_BEGIN',
    'NUM_INSERT',
    'NUM_DELETE',
    'NUM_EQUAL',
    'NUM_MULTIPLY',
    'NUM_ADD',
    'NUM_SEPARATOR',
    'NUM_SUBTRACT',
    'NUM_DECIMAL',
    'NUM_DIVIDE',

    'NUM_0',
    'NUM_1',
    'NUM_2',
    'NUM_3',
    'NUM_4',
    'NUM_5',
    'NUM_6',
    'NUM_7',
    'NUM_8',
    'NUM_9',

    'F1',
    'F2',
    'F3',
    'F4',
    'F5',
    'F6',
    'F7',
    'F8',
    'F9',
    'F10',
    'F11',
    'F12',
    'F13',
    'F14',
    'F15',
    'F16',
    'LSHIFT',
    'RSHIFT',
    'LCTRL',
    'RCTRL',
    'CAPSLOCK',
    'LMETA',
    'RMETA',
    'LALT',
    'RALT',
    'LWINDOWS',
    'RWINDOWS',
    'LCOMMAND',
    'RCOMMAND',
    'LOPTION',
    'ROPTION',
    'SPACE',
    'EXCLAMATION',
    'DOUBLEQUOTE',
    'HASH',
    'POUND',
    'DOLLAR',
    'PERCENT',
    'AMPERSAND',
    'APOSTROPHE',
    'PARENLEFT',
    'PARENRIGHT',
    'ASTERISK',
    'PLUS',
    'COMMA',
    'MINUS',
    'PERIOD',
    'SLASH',

    'KEY_0',
    'KEY_1',
    'KEY_2',
    'KEY_3',
    'KEY_4',
    'KEY_5',
    'KEY_6',
    'KEY_7',
    'KEY_8',
    'KEY_9',
    'COLON',
    'SEMICOLON',
    'LESS',
    'EQUAL',
    'GREATER',
    'QUESTION',
    'AT',
    'BRACKETLEFT',
    'BACKSLASH',
    'BRACKETRIGHT',
    'ASCIICIRCUM',
    'UNDERSCORE',
    'GRAVE',
    'QUOTELEFT',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    'BRACELEFT',
    'BAR',
    'BRACERIGHT',
    'ASCIITILDE'
]
KEY_VALUES = [
    65288,
    65289,
    65290,
    65291,
    65293,
    65293,
    65299,
    65300,
    65301,
    65307,
    65360,
    65361,
    65362,
    65363,
    65364,
    65365,
    65366,
    65367,
    65368,
    65535,
    65376,
    65377,
    65378,
    65379,
    65381,
    65382,
    65383,
    65384,
    65385,
    65386,
    65387,
    65406,
    65406,
    65362,
    65363,
    65364,
    65361,
    1,
    2,
    3,
    4,
    65366,
    65365,
    5,
    6,
    65288,
    65535,
    65407,
    65408,
    65417,
    65421,
    65425,
    65426,
    65427,
    65428,
    65429,
    65430,
    65431,
    65432,
    65433,
    65434,
    65434,
    65435,
    65435,
    65436,
    65437,
    65438,
    65439,
    65469,
    65450,
    65451,
    65452,
    65453,
    65454,
    65455,

    65456,
    65457,
    65458,
    65459,
    65460,
    65461,
    65462,
    65463,
    65464,
    65465,

    65470,
    65471,
    65472,
    65473,
    65474,
    65475,
    65476,
    65477,
    65478,
    65479,
    65480,
    65481,
    65482,
    65483,
    65484,
    65485,
    65505,
    65506,
    65507,
    65508,
    65509,
    65511,
    65512,
    65513,
    65514,
    65515,
    65516,
    65517,
    65518,
    65488,
    65489,
    32,
    33,
    34,
    35,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    42,
    43,
    44,
    45,
    46,
    47,

    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    91,
    92,
    93,
    94,
    95,
    96,
    96,
    97,
    98,
    99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126
]
_synonyms = {'HASH': 'POUND', 'GRAVE': 'QUOTELEFT', 'RETURN': 'ENTER'}


def kn2v(name: str) -> Optional[int]:
    """ From key_name, return symbol; None if DNE """
    try:
        symbol = KEY_VALUES[KEY_NAMES.index(name)]
        assert name == symbol_string(symbol)
        return KEY_VALUES[KEY_NAMES.index(name)]
    except ValueError:
        return


def is_key_name(name: str) -> bool:
    if name in _key_names:
        return True
    if name in _synonyms:
        return True
    return False


def add_synonyms(kwargs: Dict[str, Any]) -> Dict[str, Any]:
    """ Add standard key's name to kwargs if given non-standard key's name """
    keys = list(kwargs.keys())
    for key in keys:
        try:
            kwargs[_synonyms[key]] = kwargs[key]
        except KeyError:
            pass
    return kwargs


kv2n = symbol_string

key_plan = {
    'small notebook': (
        [LCTRL, FUNCTION, LWINDOWS, LALT, SPACE, RALT, RCTRL],
        [LSHIFT, Z, X, C, V, B, N, M, COMMA, PERIOD, SLASH, RSHIFT],
        [CAPSLOCK, A, S, D, F, G, H, J, K, L, SEMICOLON, APOSTROPHE, ENTER],
        [TAB, Q, W, E, R, T, Y, U, I, O, P, BRACKETLEFT, BRACKETRIGHT, BACKSLASH],
        [GRAVE, _1, _2, _3, _4, _5, _6, _7, _8, _9, _0, MINUS, EQUAL, BACKSPACE],
        [ESCAPE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, INSERT, DELETE]),
    'large notebook': (
        # FIXME: the key plan is not standard
        [LCTRL, FUNCTION, LWINDOWS, LALT, SPACE, RALT, RCTRL, LEFT, DOWN, RIGHT,
         NUM_0, NUM_DELETE, NUM_ENTER],
        [LSHIFT, Z, X, C, V, B, N, M, COMMA, PERIOD, SLASH, RSHIFT,
         NUM_1, NUM_2, NUM_3],
        [CAPSLOCK, A, S, D, F, G, H, J, K, L, SEMICOLON, APOSTROPHE, ENTER,
         NUM_4, NUM_5, NUM_6, NUM_ADD],
        [TAB, Q, W, E, R, T, Y, U, I, O, P, BRACKETLEFT, BRACKETRIGHT, BACKSLASH,
         NUM_7, NUM_8, NUM_9],
        [GRAVE, _1, _2, _3, _4, _5, _6, _7, _8, _9, _0, MINUS, EQUAL, BACKSPACE,
         NUMLOCK, NUM_DIVIDE, NUM_MULTIPLY, NUM_SUBTRACT],
        [ESCAPE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, INSERT, DELETE,
         HOME, END, PAGEUP, PAGEDOWN]),
    'mechanical': (
        [LCTRL, LWINDOWS, LALT, SPACE, RALT, RWINDOWS, MENU, RCTRL],
        [LSHIFT, Z, X, C, V, B, N, M, COMMA, PERIOD, SLASH, RSHIFT],
        [CAPSLOCK, A, S, D, F, G, H, J, K, L, SEMICOLON, APOSTROPHE, ENTER],
        [TAB, Q, W, E, R, T, Y, U, I, O, P, BRACKETLEFT, BRACERIGHT, BACKSLASH],
        [GRAVE, _1, _2, _3, _4, _5, _6, _7, _8, _9, _0, MINUS, EQUAL, BACKSPACE],
        [ESCAPE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12])
    }
